"
" ███╗   ███╗██╗   ██╗██╗   ██╗██╗███╗   ███╗██████╗  ██████╗
" ████╗ ████║╚██╗ ██╔╝██║   ██║██║████╗ ████║██╔══██╗██╔════╝
" ██╔████╔██║ ╚████╔╝ ██║   ██║██║██╔████╔██║██████╔╝██║     
" ██║╚██╔╝██║  ╚██╔╝  ╚██╗ ██╔╝██║██║╚██╔╝██║██╔══██╗██║     
" ██║ ╚═╝ ██║   ██║    ╚████╔╝ ██║██║ ╚═╝ ██║██║  ██║╚██████╗
" ╚═╝     ╚═╝   ╚═╝     ╚═══╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝
"
" Author:@hnpyn

" I have transfered to neovim, just keep basic settings

" -------------------------------------------------------
" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Vim will load $VIMRUNTIME/defaults.vim if the user does not have a vimrc.
" This happens after /etc/vim/vimrc(.local) are loaded, so it will override
" any settings in these files.
" If you don't want that to happen, uncomment the below line to prevent
" defaults.vim from being loaded.
" let g:skip_defaults_vim = 1

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'. Setting 'compatible' changes
" numerous options, so any other options should be set AFTER setting 'compatible'.

" set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
" filetype plugin indent on
"endif

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

" ---------- User Settings ----------
" The following settings cause vim to behave a lot differently from regular Vi. They are highly recommended though.
set showcmd	      	" Show (partial) command in status line.
set showmatch		    " Show matching brackets.
set ignorecase		  " Do case insensitive matching
set smartcase		    " Do smart case matching
set incsearch		    " Incremental search
set autowrite		    " Automatically save before commands like :next and :make
set hidden		      " Hide buffers when they are abandoned
set mouse=a		      " Enable mouse usage (all modes)
" others
set nocompatible    " Not compatible with vi
set ic
set hlsearch
set number
set relativenumber
set expandtab
set tabstop=4
set encoding=utf-8
set fileencodings=utf-8,usc-bom,GB2312,big5
set nobackup
set nowritebackup
set cursorline
set ruler
set autoindent
set smartindent
set shiftwidth=4
set autoread
set go=
set signcolumn=yes
set backspace=indent,eol,start
set clipboard=unnamed
set paste
" set scrolloff=2 

filetype on

" ---------- Key Bindings ----------
" leader key space
let mapleader=' '

" ,w to save
nnoremap ,w <Esc>:w<CR>
" map jj to escape key
inoremap jj <Esc>
" navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
" panels
nnoremap <leader>s <C-w>s
nnoremap <leader>v <C-w>v
nnoremap <leader>q <C-w>q
" quit without save
nnoremap <C-c><C-c> <Esc>:q!<CR>
" no highlight
nnoremap <Esc> :noh<CR>
nnoremap <Esc>^[ <Esc>^[
" NerdTree
nnoremap <leader>tt :NERDTreeToggle<CR>

" ---------- Plugins ----------
call plug#begin()
" The default plugin directory will be as follows:
"   - Vim (Linux/macOS): '~/.vim/plugged'
"   - Vim (Windows): '~/vimfiles/plugged'
"   - Neovim (Linux/macOS/Windows): stdpath('data') . '/plugged'
" You can specify a custom plugin directory by passing it as the argument
"   - e.g. `call plug#begin('~/.vim/plugged')`
"   - Avoid using standard Vim directory names like 'plugin'

" Make sure you use single quotes

" On-demand loading

" Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
" Plug 'mhinz/vim-startify'  
" Plug 'ghifarit53/tokyonight-vim' 
" Plug 'Yggdroot/indentLine'  
" Plug 'vim-airline/vim-airline'  
" Plug 'vim-airline/vim-airline-themes'
" Plug 'neoclide/coc.nvim', {'branch': 'release'}  
" Plug 'preservim/tagbar' 

call plug#end()

" ---------- Pretty Dress ----------
set termguicolors
" set highlight to 1000ms
let g:highlightedyank_highlight_duration = 1000
" set highlight color
hi Visual guifg=#0d0e0f guibg=#eebd35 gui=none
hi Search guifg=#0d0e0f guibg=#eebd35 gui=none
hi IncSearch guifg=#0d0e0f guibg=#eebd35 gui=none
" colorscheme
" tokyonight
" let g:tokyonight_transparent_background = 1  " 和终端透明度保持一致
" let g:tokyonight_style = 'night'  " available: night, storm
" let g:tokyonight_enable_italic = 1
" colorscheme tokyonight
" gruvbox
set background=dark
colorscheme gruvbox
" dracula
" colorscheme dracula
